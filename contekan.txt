1 .Service Container di Laravel adalah sebuah mekanisme yang bertindak sebagai dependency injection container dan pengelola dependensi. 
 Dengan Service Container, Laravel dapat mengelola berbagai class dan dependensi mereka secara otomatis

  1. Binding: Service Container memungkinkan pengguna untuk mendaftarkan kelas atau interface ke dalam kontainer. Misalnya, pengguna bisa mendaftarkan kelas atau layanan agar bisa dipanggil dan di-resolve oleh Laravel kapanpun dibutuhkan.
  2. Resolving: Saat Laravel membutuhkan suatu layanan atau kelas, ia akan mencari di dalam kontainer, menyelesaikan dependensi, dan memberikan instance dari kelas yang di-bind.
  3. Dependency Injection: Service Container menyuntikkan dependensi yang dibutuhkan suatu kelas secara otomatis, baik melalui metode constructor atau metode tertentu.

2. seperti namanya middleware berada di antara request yang di gunakan oleh pengguna dan juga aplikasi pada laravel, middleware juga berfungsi sebagai penyaring, modificator dan juga executor terhadap request yang di jalankan.
  contoh pnegunaan middleware adalah salah satunya untuk melakukan otentikasi terhadap user login.

3. Eloquent ORM pada database adalah sebuah jembatan dan juga plugin dalam laravel dimana fungsinya adalah untuk mempermudah koneksi antara database dan aplikasi,untuk membuat sebuah relasi pada setiap tabel kita perlu menambahkan
    relasinya di dalam model,entah one-to-one, one-to-many, atau many-to-many,
    contoh nya adalah berikut : 
pada table profile:
public function profile()
{
    return $this->hasOne(Profile::class);
}
Pada table user
public function user()
{
    return $this->belongsTo(User::class);
}
pada contoh di atas menggunakan one-to-one relation.

4. perbedaan antara vue 2 dan 3 tentu cukup signifikan karena vue 3 banyak membawa fitur baru dan juga lebih fleksibel dalam penggunaan nya,fitur-fitur baru seperti API,telteport dan suspense merupakan fitur baru yang ada pada vue 3

5. reactivity pada vue merupakan sebuah vitur dimana vue dapat memperbarui UI secara otomatis ketika data berubah didalam component secara mudah nya, vue tidak memerlukan loading ketika ada perubahan baik di dalam data ataupun tampilan

6. Computed pada vue adlah bagian dimana vue menyimpan cache pada aplikasi contoh nya seperti jika ada merubah tittle tapi tidak dengan deskripsinya maka yang akan di muat ulang hanya tittle nya saja, dan deskripsi tidak akan di muat ulang dari database
   watch di gunakan untuk melihat perubahan pada data setelah melalui proses computed, watch sendiri bisa di gunakan untuk menamppilkan error message, atau success message pada saat kita melakukan perubahan data.

7. Fungsi utama adalah membuat vue dan laravel layaknya SPA tetapi tetap menggunakan server-side routing.

8. Perbedaan SPA dengan intertia dan laravel balde, terletak pada interkasi antara backend dan front end
   1. pada laravel blade, saaat pengguna melakukan request server akan merender data dan di kirim ke html yang akan di tampilkan secara penuh di browser, dan pada blade juga jika ada perubahan pada data maka halaman akan di reload secara penuh dan tentunya membutuhkan waktu
   2. sedangkan pada SPA dengan inertia, laravel hanya akan mengirimkan halaman yang sesuai dengan request juga ketika ada perubahan data halaman tidak akan di muat ulang, yang artinya data akan di tampilkan lebih cepat.
9. dalam hal ini sebetulnya penggunaan nya mirip dengan laravel blade, hanya saja pada inertia state bisa di gunakan juga dengan props, jadi data pada backend data bisa langsung di kirimkan pada fornt end di vue.
